name: Android APK from full flutter branch

on:
  push:
    branches: Full-flutter-App
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-debug-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter depedencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error


      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //; s/+.*//')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Rename APK with version
        run: mv build/app/outputs/flutter-apk/app-debug.apk build/app/outputs/flutter-apk/silvernote-${{ steps.get_version.outputs.VERSION }}-android-debug.apk
          

      - name: Get latest tag
        id: get_latest_tag
        run: |
          TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          echo "latest tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        run: |
          if [ -z "${{ steps.get_latest_tag.outputs.TAG }}" ]; then
            NEW_VERSION="0.0.1"
          else
            TAG=${{ steps.get_latest_tag.outputs.TAG }}
            VERSION=${TAG#v}
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
            PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          fi
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
          name: Silvernote (v${{ steps.bump_version.outputs.NEW_VERSION }})
          body: |
            Nouvelle version de Silvernote.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
          files: build/app/outputs/flutter-apk/silvernote-${{ steps.get_version.outputs.VERSION }}-android-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}